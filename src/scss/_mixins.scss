// Media queries
@mixin media-query($type, $breakpoint: $lap-start) {
    @if $type == "min" {
        @media only screen and (min-width: $breakpoint) {
            @content;
        }
    } @else if $type == "max" {
        @media only screen and (max-width: $breakpoint - 1px) {
            @content;
        }
    } @else if $type == "palm" {
        @media only screen and (max-width: $lap-start - 1px) {
            @content;
        }
    } @else if $type == "lap" {
        @media only screen and (min-width: $lap-start) and (max-width: $desk-start - 1px) {
            @content;
        }
    } @else if $type == "desk" {
        @media only screen and (min-width: $desk-start) {
            @content;
        }
    } @else if $type == "wide" {
        @media only screen and (min-width: $wide-start) {
            @content;
        }
    }
}

// Font size
@mixin font-size($font-size) {
    font-size: $font-size;
    font-size: ($font-size / $base-font-size) * 1rem;
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: "") {
    content: $content;
    display: $display;
    position: $pos;
}

@mixin rounded($radius: $half-spacing) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

// Animation hardware acceleration
@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}

// Font styles
@mixin font-source-sans($size: false, $colour: false, $weight: false, $lh: false) {
    font-family: "Source Sans Pro", Helvetica, Arial, sans-serif;
    @if $size {
        font-size: $size;
    }
    @if $colour {
        color: $colour;
    }
    @if $weight {
        font-weight: $weight;
    }
    @if $lh {
        line-height: $lh;
    }
}

// Input placeholder
@mixin input-placeholder {
    &.placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
    &::-webkit-input-placeholder {
        @content;
    }
}

// Transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// Translate
@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}

// Rotate
@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

// Box shadow
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}
